# -*- coding: utf-8 -*-
"""
Created on Fri Aug 19 02:20:07 2022

@author: ffaraj
"""

import pandas as pd
from scipy.optimize import minimize


C = pd.Series([20,6, 230, 160]) #price of each material in order

def cost_fun(x):

    return (sum(C*x)) #minimize sum of material costs

cons = (

        {'type': 'eq', 'fun': lambda x: x[0]+x[1]+x[2]+x[3]-1 },
        {'type': 'ineq', 'fun': lambda x:  -1*((11.46*x[0] +56.30*x[1] + 1.64*x[2] + 5.36*x[3]) - 3*(1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) - 3*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3] )) },
        {'type': 'ineq', 'fun': lambda x: -1* ( (-1*(11.46*x[0] +56.30*x[1] + 1.64*x[2] + 5.36*x[3])) +2.8*(1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) +2.8*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3]))},
        {'type': 'ineq', 'fun': lambda x: -1* ((1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) - 2.5*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3] ) )},
        {'type': 'ineq', 'fun': lambda x: 1* ((1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) - 1.5*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3] ) )},
        {'type': 'ineq', 'fun': lambda x: -1* (-2.8*(11.46*x[0] +56.30*x[1] + 1.64*x[2] + 5.36*x[3]) - 1.1*(1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) -0.7*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3])+1.05*(48.36*x[0] +12.70*x[1] +12.20*x[2] + 1.84*x[3]) )},        
        {'type': 'ineq', 'fun': lambda x: -1* (2.8*(11.46*x[0] +56.30*x[1] + 1.64*x[2] + 5.36*x[3]) + 1.1*(1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) +0.7*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3])-1.11*(48.36*x[0] +12.70*x[1] +12.20*x[2] + 1.84*x[3]) )},
        {'type': 'ineq', 'fun': lambda x: -1* (-7.6*(11.46*x[0] +56.30*x[1] + 1.64*x[2] + 5.36*x[3]) - 6.72*(1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) -1.43*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3]) +4.07*(48.36*x[0] +12.70*x[1] +12.20*x[2] + 1.84*x[3]) - 2.85*(0.02*x[0] + 0.22*x[1] + 2.42*x[3]) +0.7*(31.0*x[0] +12.12*x[1] + 6.77*x[2] + 2.08*x[3]) -70.0)},
        {'type': 'ineq', 'fun': lambda x: -1* (7.6*(11.46*x[0] +56.30*x[1] + 1.64*x[2] + 5.36*x[3]) + 6.72*(1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) +1.43*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3]) -4.07*(48.36*x[0] +12.70*x[1] +12.20*x[2] + 1.84*x[3]) + 2.85*(0.02*x[0] + 0.22*x[1] + 2.42*x[3]) -0.5*(31.0*x[0] +12.12*x[1] + 6.77*x[2] + 2.08*x[3]) +50.0)},
        {'type': 'ineq', 'fun': lambda x: -1 * (8.6*(11.46*x[0] +56.30*x[1] + 1.64*x[2] + 5.36*x[3]) + 5.07*(1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) + 1.08*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3]) -3.04*(48.36*x[0] +12.70*x[1] +12.20*x[2] + 1.84*x[3]) + 2.15*(0.02*x[0] + 0.22*x[1] + 0.00*x[2] + 2.42*x[3]) +0.4*(31*x[0] +12.12*x[1] + 6.77*x[2] + 2.08*x[3]) -40)},
        {'type': 'ineq', 'fun': lambda x: -1 * (-8.6*(11.46*x[0] +56.30*x[1] + 1.64*x[2] + 5.36*x[3]) - 5.07*(1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) - 1.08*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3]) +3.04*(48.36*x[0] +12.70*x[1] +12.20*x[2] + 1.84*x[3]) - 2.15*(0.02*x[0] + 0.22*x[1] + 0.00*x[2] + 2.42*x[3]) -2.0*(31*x[0] +12.12*x[1] + 6.77*x[2] + 2.08*x[3]) +20)},
        {'type': 'ineq', 'fun': lambda x: -1* (2.65*(1.62*x[0] +10.18*x[1] +39.06*x[2] + 2.99*x[3]) - 1.69*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3]) -0.1*(31*x[0] +12.12*x[1] + 6.77*x[2] + 2.08*x[3]) -10)},
        {'type': 'ineq', 'fun': lambda x: -1* ( 3.04*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3]) +0.12*(31*x[0] +12.12*x[1] + 6.77*x[2] + 2.08*x[3]) -12)},
        {'type': 'ineq', 'fun': lambda x: -1* ( -3.04*(0.96*x[0] + 4.76*x[1] +33.94*x[2] +83.61*x[3]) -0.07*(31*x[0] +12.12*x[1] + 6.77*x[2] + 2.08*x[3]) -7)}
        )
  
X_0 = [0.25,0.25, 0.25,0.25] #initial guess 25% of each material


res = minimize(cost_fun, X_0, method='SLSQP',constraints=cons) #optimize

print(res)

    